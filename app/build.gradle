/*
 * Copyright (c) 2021 Eugene Glushankov
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-parcelize'
apply plugin: 'com.google.gms.google-services'
apply plugin: 'com.google.firebase.crashlytics'

def versions = [
        kotlin  : '1.4.31',
        androidx: [
                core            : '1.3.2',
                appcompat       : '1.2.0',
                constraintlayout: '2.0.4',
                navigation      : '2.3.4',
                lifecycle       : '2.3.1',
                browser         : '1.3.0'
        ],
        material: '1.3.0',
        timber  : '4.7.1',
        koin    : '2.2.2',

        test    : [
                junit   : '4.13.2',
                androidx: [
                        junit   : '1.1.2',
                        espresso: '3.3.0'
                ]
        ]
]

def secretProperties = new Properties()
def secretPropertiesStream = project.rootProject.file('secret.properties').newDataInputStream()

try {
    secretProperties.load(secretPropertiesStream)
} finally {
    secretPropertiesStream.close()
}

android {
    signingConfigs {
        release {
            storeFile file(secretProperties['KEYSTORE_FILE_NAME'])
            storePassword secretProperties['KEYSTORE_PASSWORD']
            keyAlias = secretProperties['KEYSTORE_KEY_ALIAS']
            keyPassword secretProperties['KEYSTORE_KEY_PASSWORD']
        }
    }

    compileSdkVersion 30
    buildToolsVersion "30.0.3"

    defaultConfig {
        applicationId "com.netchar.nicknamer"
        minSdkVersion 23
        targetSdkVersion 30
        versionCode extractVersionCode(appVersionName)
        versionName appVersionName

        buildConfigField("String", "GOOGLE_PLAY_LICENSE_KEY", secretProperties['GOOGLE_PLAY_LICENSE_KEY'])

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        debug {
            minifyEnabled false
            applicationIdSuffix '.debug'
            versionNameSuffix '-debug'
        }

        release {
            minifyEnabled false
            applicationIdSuffix '.release'
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }

        applicationVariants.all { variant ->
            variant.outputs.all {
                outputFileName = "nicknamer_${variant.name}_${variant.versionName}.apk"
            }
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
        freeCompilerArgs = ["-Xinline-classes"]
    }
    buildFeatures {
        viewBinding true
        dataBinding true
    }
}

dependencies {
    implementation platform('com.google.firebase:firebase-bom:26.7.0')

    // AndoridX
    implementation "androidx.browser:browser:$versions.androidx.browser"
    implementation "androidx.core:core-ktx:$versions.androidx.core"
    implementation "androidx.appcompat:appcompat:$versions.androidx.appcompat"
    implementation "androidx.constraintlayout:constraintlayout:$versions.androidx.constraintlayout"
    implementation "androidx.navigation:navigation-fragment-ktx:$versions.androidx.navigation"
    implementation "androidx.navigation:navigation-ui-ktx:$versions.androidx.navigation"
    implementation "androidx.lifecycle:lifecycle-common-java8:$versions.androidx.lifecycle"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$versions.androidx.lifecycle"

    // Material Library
    implementation "com.google.android.material:material:$versions.material"

    // Timber
    implementation "com.jakewharton.timber:timber:$versions.timber"

    // Koin
    implementation "org.koin:koin-androidx-scope:$versions.koin"
    implementation "org.koin:koin-androidx-viewmodel:$versions.koin"
    implementation "org.koin:koin-androidx-fragment:$versions.koin"
    implementation "org.koin:koin-androidx-ext:$versions.koin"

    // Analytics
    implementation 'com.google.firebase:firebase-analytics-ktx'
    implementation 'com.google.firebase:firebase-crashlytics-ktx'

    // Tests
    testImplementation "junit:junit:$versions.test.junit"
    androidTestImplementation "androidx.test.ext:junit:$versions.test.androidx.junit"
    androidTestImplementation "androidx.test.espresso:espresso-core:$versions.test.androidx.espresso"
}